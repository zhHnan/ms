// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: project_service.proto

package project

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexMessage) Reset() {
	*x = IndexMessage{}
	mi := &file_project_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexMessage) ProtoMessage() {}

func (x *IndexMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexMessage.ProtoReflect.Descriptor instead.
func (*IndexMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{0}
}

func (x *IndexMessage) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type MenuMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pid           int64                  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Icon          string                 `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	Url           string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	FilePath      string                 `protobuf:"bytes,6,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Params        string                 `protobuf:"bytes,7,opt,name=params,proto3" json:"params,omitempty"`
	Node          string                 `protobuf:"bytes,8,opt,name=node,proto3" json:"node,omitempty"`
	Sort          int32                  `protobuf:"varint,9,opt,name=sort,proto3" json:"sort,omitempty"`
	Status        int32                  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy      int64                  `protobuf:"varint,11,opt,name=createBy,proto3" json:"createBy,omitempty"`
	IsInner       int32                  `protobuf:"varint,12,opt,name=isInner,proto3" json:"isInner,omitempty"`
	Values        string                 `protobuf:"bytes,13,opt,name=values,proto3" json:"values,omitempty"`
	ShowSlider    int32                  `protobuf:"varint,14,opt,name=showSlider,proto3" json:"showSlider,omitempty"`
	StatusText    string                 `protobuf:"bytes,15,opt,name=statusText,proto3" json:"statusText,omitempty"`
	InnerText     string                 `protobuf:"bytes,16,opt,name=innerText,proto3" json:"innerText,omitempty"`
	FullUrl       string                 `protobuf:"bytes,17,opt,name=fullUrl,proto3" json:"fullUrl,omitempty"`
	Children      []*MenuMessage         `protobuf:"bytes,18,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MenuMessage) Reset() {
	*x = MenuMessage{}
	mi := &file_project_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuMessage) ProtoMessage() {}

func (x *MenuMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuMessage.ProtoReflect.Descriptor instead.
func (*MenuMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{1}
}

func (x *MenuMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuMessage) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *MenuMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MenuMessage) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuMessage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MenuMessage) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *MenuMessage) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *MenuMessage) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *MenuMessage) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MenuMessage) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MenuMessage) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *MenuMessage) GetIsInner() int32 {
	if x != nil {
		return x.IsInner
	}
	return 0
}

func (x *MenuMessage) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

func (x *MenuMessage) GetShowSlider() int32 {
	if x != nil {
		return x.ShowSlider
	}
	return 0
}

func (x *MenuMessage) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

func (x *MenuMessage) GetInnerText() string {
	if x != nil {
		return x.InnerText
	}
	return ""
}

func (x *MenuMessage) GetFullUrl() string {
	if x != nil {
		return x.FullUrl
	}
	return ""
}

func (x *MenuMessage) GetChildren() []*MenuMessage {
	if x != nil {
		return x.Children
	}
	return nil
}

type IndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Menus         []*MenuMessage         `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexResponse) Reset() {
	*x = IndexResponse{}
	mi := &file_project_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexResponse) ProtoMessage() {}

func (x *IndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexResponse.ProtoReflect.Descriptor instead.
func (*IndexResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{2}
}

func (x *IndexResponse) GetMenus() []*MenuMessage {
	if x != nil {
		return x.Menus
	}
	return nil
}

type ProjectMessage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Cover              string                 `protobuf:"bytes,2,opt,name=Cover,proto3" json:"Cover,omitempty"`
	Name               string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description        string                 `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	AccessControlType  string                 `protobuf:"bytes,5,opt,name=AccessControlType,proto3" json:"AccessControlType,omitempty"`
	WhiteList          string                 `protobuf:"bytes,6,opt,name=WhiteList,proto3" json:"WhiteList,omitempty"`
	Order              int32                  `protobuf:"varint,7,opt,name=Order,proto3" json:"Order,omitempty"`
	Deleted            int32                  `protobuf:"varint,8,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
	TemplateCode       string                 `protobuf:"bytes,9,opt,name=TemplateCode,proto3" json:"TemplateCode,omitempty"`
	Schedule           float64                `protobuf:"fixed64,10,opt,name=Schedule,proto3" json:"Schedule,omitempty"`
	CreateTime         string                 `protobuf:"bytes,11,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	OrganizationCode   string                 `protobuf:"bytes,12,opt,name=OrganizationCode,proto3" json:"OrganizationCode,omitempty"`
	DeletedTime        string                 `protobuf:"bytes,13,opt,name=DeletedTime,proto3" json:"DeletedTime,omitempty"`
	Private            int32                  `protobuf:"varint,14,opt,name=Private,proto3" json:"Private,omitempty"`
	Prefix             string                 `protobuf:"bytes,15,opt,name=Prefix,proto3" json:"Prefix,omitempty"`
	OpenPrefix         int32                  `protobuf:"varint,16,opt,name=OpenPrefix,proto3" json:"OpenPrefix,omitempty"`
	Archive            int32                  `protobuf:"varint,17,opt,name=Archive,proto3" json:"Archive,omitempty"`
	ArchiveTime        int64                  `protobuf:"varint,18,opt,name=ArchiveTime,proto3" json:"ArchiveTime,omitempty"`
	OpenBeginTime      int32                  `protobuf:"varint,19,opt,name=OpenBeginTime,proto3" json:"OpenBeginTime,omitempty"`
	OpenTaskPrivate    int32                  `protobuf:"varint,20,opt,name=OpenTaskPrivate,proto3" json:"OpenTaskPrivate,omitempty"`
	TaskBoardTheme     string                 `protobuf:"bytes,21,opt,name=TaskBoardTheme,proto3" json:"TaskBoardTheme,omitempty"`
	BeginTime          string                 `protobuf:"bytes,22,opt,name=BeginTime,proto3" json:"BeginTime,omitempty"`
	EndTime            string                 `protobuf:"bytes,23,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	AutoUpdateSchedule int32                  `protobuf:"varint,24,opt,name=AutoUpdateSchedule,proto3" json:"AutoUpdateSchedule,omitempty"`
	ProjectCode        int64                  `protobuf:"varint,25,opt,name=ProjectCode,proto3" json:"ProjectCode,omitempty"`
	MemberCode         int64                  `protobuf:"varint,26,opt,name=MemberCode,proto3" json:"MemberCode,omitempty"`
	JoinTime           string                 `protobuf:"bytes,27,opt,name=JoinTime,proto3" json:"JoinTime,omitempty"`
	IsOwner            int64                  `protobuf:"varint,28,opt,name=IsOwner,proto3" json:"IsOwner,omitempty"`
	Authorize          string                 `protobuf:"bytes,29,opt,name=Authorize,proto3" json:"Authorize,omitempty"`
	Code               string                 `protobuf:"bytes,30,opt,name=code,proto3" json:"code,omitempty"`
	OwnerName          string                 `protobuf:"bytes,31,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	Collected          int32                  `protobuf:"varint,32,opt,name=collected,proto3" json:"collected,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProjectMessage) Reset() {
	*x = ProjectMessage{}
	mi := &file_project_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectMessage) ProtoMessage() {}

func (x *ProjectMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectMessage.ProtoReflect.Descriptor instead.
func (*ProjectMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectMessage) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ProjectMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectMessage) GetAccessControlType() string {
	if x != nil {
		return x.AccessControlType
	}
	return ""
}

func (x *ProjectMessage) GetWhiteList() string {
	if x != nil {
		return x.WhiteList
	}
	return ""
}

func (x *ProjectMessage) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProjectMessage) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *ProjectMessage) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *ProjectMessage) GetSchedule() float64 {
	if x != nil {
		return x.Schedule
	}
	return 0
}

func (x *ProjectMessage) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProjectMessage) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *ProjectMessage) GetDeletedTime() string {
	if x != nil {
		return x.DeletedTime
	}
	return ""
}

func (x *ProjectMessage) GetPrivate() int32 {
	if x != nil {
		return x.Private
	}
	return 0
}

func (x *ProjectMessage) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ProjectMessage) GetOpenPrefix() int32 {
	if x != nil {
		return x.OpenPrefix
	}
	return 0
}

func (x *ProjectMessage) GetArchive() int32 {
	if x != nil {
		return x.Archive
	}
	return 0
}

func (x *ProjectMessage) GetArchiveTime() int64 {
	if x != nil {
		return x.ArchiveTime
	}
	return 0
}

func (x *ProjectMessage) GetOpenBeginTime() int32 {
	if x != nil {
		return x.OpenBeginTime
	}
	return 0
}

func (x *ProjectMessage) GetOpenTaskPrivate() int32 {
	if x != nil {
		return x.OpenTaskPrivate
	}
	return 0
}

func (x *ProjectMessage) GetTaskBoardTheme() string {
	if x != nil {
		return x.TaskBoardTheme
	}
	return ""
}

func (x *ProjectMessage) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *ProjectMessage) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ProjectMessage) GetAutoUpdateSchedule() int32 {
	if x != nil {
		return x.AutoUpdateSchedule
	}
	return 0
}

func (x *ProjectMessage) GetProjectCode() int64 {
	if x != nil {
		return x.ProjectCode
	}
	return 0
}

func (x *ProjectMessage) GetMemberCode() int64 {
	if x != nil {
		return x.MemberCode
	}
	return 0
}

func (x *ProjectMessage) GetJoinTime() string {
	if x != nil {
		return x.JoinTime
	}
	return ""
}

func (x *ProjectMessage) GetIsOwner() int64 {
	if x != nil {
		return x.IsOwner
	}
	return 0
}

func (x *ProjectMessage) GetAuthorize() string {
	if x != nil {
		return x.Authorize
	}
	return ""
}

func (x *ProjectMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProjectMessage) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *ProjectMessage) GetCollected() int32 {
	if x != nil {
		return x.Collected
	}
	return 0
}

type ProjectRpcMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberId      int64                  `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	MemberName    string                 `protobuf:"bytes,2,opt,name=memberName,proto3" json:"memberName,omitempty"`
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SelectBy      string                 `protobuf:"bytes,5,opt,name=selectBy,proto3" json:"selectBy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectRpcMessage) Reset() {
	*x = ProjectRpcMessage{}
	mi := &file_project_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectRpcMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRpcMessage) ProtoMessage() {}

func (x *ProjectRpcMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRpcMessage.ProtoReflect.Descriptor instead.
func (*ProjectRpcMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectRpcMessage) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ProjectRpcMessage) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *ProjectRpcMessage) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProjectRpcMessage) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProjectRpcMessage) GetSelectBy() string {
	if x != nil {
		return x.SelectBy
	}
	return ""
}

type MyProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pm            []*ProjectMessage      `protobuf:"bytes,1,rep,name=pm,proto3" json:"pm,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MyProjectResponse) Reset() {
	*x = MyProjectResponse{}
	mi := &file_project_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MyProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyProjectResponse) ProtoMessage() {}

func (x *MyProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyProjectResponse.ProtoReflect.Descriptor instead.
func (*MyProjectResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{5}
}

func (x *MyProjectResponse) GetPm() []*ProjectMessage {
	if x != nil {
		return x.Pm
	}
	return nil
}

func (x *MyProjectResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_project_service_proto protoreflect.FileDescriptor

const file_project_service_proto_rawDesc = "" +
	"\n" +
	"\x15project_service.proto\x12\x12project.service.v1\"$\n" +
	"\fIndexMessage\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\xe2\x03\n" +
	"\vMenuMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\x03R\x03pid\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x12\n" +
	"\x04icon\x18\x04 \x01(\tR\x04icon\x12\x10\n" +
	"\x03url\x18\x05 \x01(\tR\x03url\x12\x1a\n" +
	"\bfilePath\x18\x06 \x01(\tR\bfilePath\x12\x16\n" +
	"\x06params\x18\a \x01(\tR\x06params\x12\x12\n" +
	"\x04node\x18\b \x01(\tR\x04node\x12\x12\n" +
	"\x04sort\x18\t \x01(\x05R\x04sort\x12\x16\n" +
	"\x06status\x18\n" +
	" \x01(\x05R\x06status\x12\x1a\n" +
	"\bcreateBy\x18\v \x01(\x03R\bcreateBy\x12\x18\n" +
	"\aisInner\x18\f \x01(\x05R\aisInner\x12\x16\n" +
	"\x06values\x18\r \x01(\tR\x06values\x12\x1e\n" +
	"\n" +
	"showSlider\x18\x0e \x01(\x05R\n" +
	"showSlider\x12\x1e\n" +
	"\n" +
	"statusText\x18\x0f \x01(\tR\n" +
	"statusText\x12\x1c\n" +
	"\tinnerText\x18\x10 \x01(\tR\tinnerText\x12\x18\n" +
	"\afullUrl\x18\x11 \x01(\tR\afullUrl\x12;\n" +
	"\bchildren\x18\x12 \x03(\v2\x1f.project.service.v1.MenuMessageR\bchildren\"F\n" +
	"\rIndexResponse\x125\n" +
	"\x05menus\x18\x01 \x03(\v2\x1f.project.service.v1.MenuMessageR\x05menus\"\xea\a\n" +
	"\x0eProjectMessage\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x03R\x02Id\x12\x14\n" +
	"\x05Cover\x18\x02 \x01(\tR\x05Cover\x12\x12\n" +
	"\x04Name\x18\x03 \x01(\tR\x04Name\x12 \n" +
	"\vDescription\x18\x04 \x01(\tR\vDescription\x12,\n" +
	"\x11AccessControlType\x18\x05 \x01(\tR\x11AccessControlType\x12\x1c\n" +
	"\tWhiteList\x18\x06 \x01(\tR\tWhiteList\x12\x14\n" +
	"\x05Order\x18\a \x01(\x05R\x05Order\x12\x18\n" +
	"\aDeleted\x18\b \x01(\x05R\aDeleted\x12\"\n" +
	"\fTemplateCode\x18\t \x01(\tR\fTemplateCode\x12\x1a\n" +
	"\bSchedule\x18\n" +
	" \x01(\x01R\bSchedule\x12\x1e\n" +
	"\n" +
	"CreateTime\x18\v \x01(\tR\n" +
	"CreateTime\x12*\n" +
	"\x10OrganizationCode\x18\f \x01(\tR\x10OrganizationCode\x12 \n" +
	"\vDeletedTime\x18\r \x01(\tR\vDeletedTime\x12\x18\n" +
	"\aPrivate\x18\x0e \x01(\x05R\aPrivate\x12\x16\n" +
	"\x06Prefix\x18\x0f \x01(\tR\x06Prefix\x12\x1e\n" +
	"\n" +
	"OpenPrefix\x18\x10 \x01(\x05R\n" +
	"OpenPrefix\x12\x18\n" +
	"\aArchive\x18\x11 \x01(\x05R\aArchive\x12 \n" +
	"\vArchiveTime\x18\x12 \x01(\x03R\vArchiveTime\x12$\n" +
	"\rOpenBeginTime\x18\x13 \x01(\x05R\rOpenBeginTime\x12(\n" +
	"\x0fOpenTaskPrivate\x18\x14 \x01(\x05R\x0fOpenTaskPrivate\x12&\n" +
	"\x0eTaskBoardTheme\x18\x15 \x01(\tR\x0eTaskBoardTheme\x12\x1c\n" +
	"\tBeginTime\x18\x16 \x01(\tR\tBeginTime\x12\x18\n" +
	"\aEndTime\x18\x17 \x01(\tR\aEndTime\x12.\n" +
	"\x12AutoUpdateSchedule\x18\x18 \x01(\x05R\x12AutoUpdateSchedule\x12 \n" +
	"\vProjectCode\x18\x19 \x01(\x03R\vProjectCode\x12\x1e\n" +
	"\n" +
	"MemberCode\x18\x1a \x01(\x03R\n" +
	"MemberCode\x12\x1a\n" +
	"\bJoinTime\x18\x1b \x01(\tR\bJoinTime\x12\x18\n" +
	"\aIsOwner\x18\x1c \x01(\x03R\aIsOwner\x12\x1c\n" +
	"\tAuthorize\x18\x1d \x01(\tR\tAuthorize\x12\x12\n" +
	"\x04code\x18\x1e \x01(\tR\x04code\x12\x1c\n" +
	"\townerName\x18\x1f \x01(\tR\townerName\x12\x1c\n" +
	"\tcollected\x18  \x01(\x05R\tcollected\"\x9b\x01\n" +
	"\x11ProjectRpcMessage\x12\x1a\n" +
	"\bmemberId\x18\x01 \x01(\x03R\bmemberId\x12\x1e\n" +
	"\n" +
	"memberName\x18\x02 \x01(\tR\n" +
	"memberName\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x03R\x04page\x12\x1a\n" +
	"\bpageSize\x18\x04 \x01(\x03R\bpageSize\x12\x1a\n" +
	"\bselectBy\x18\x05 \x01(\tR\bselectBy\"]\n" +
	"\x11MyProjectResponse\x122\n" +
	"\x02pm\x18\x01 \x03(\v2\".project.service.v1.ProjectMessageR\x02pm\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total2\xc6\x01\n" +
	"\x0eProjectService\x12N\n" +
	"\x05Index\x12 .project.service.v1.IndexMessage\x1a!.project.service.v1.IndexResponse\"\x00\x12d\n" +
	"\x12FindProjectByMemId\x12%.project.service.v1.ProjectRpcMessage\x1a%.project.service.v1.MyProjectResponse\"\x00B+Z)ms-project/pkg/service/project_service.v1b\x06proto3"

var (
	file_project_service_proto_rawDescOnce sync.Once
	file_project_service_proto_rawDescData []byte
)

func file_project_service_proto_rawDescGZIP() []byte {
	file_project_service_proto_rawDescOnce.Do(func() {
		file_project_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_service_proto_rawDesc), len(file_project_service_proto_rawDesc)))
	})
	return file_project_service_proto_rawDescData
}

var file_project_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_project_service_proto_goTypes = []any{
	(*IndexMessage)(nil),      // 0: project.service.v1.IndexMessage
	(*MenuMessage)(nil),       // 1: project.service.v1.MenuMessage
	(*IndexResponse)(nil),     // 2: project.service.v1.IndexResponse
	(*ProjectMessage)(nil),    // 3: project.service.v1.ProjectMessage
	(*ProjectRpcMessage)(nil), // 4: project.service.v1.ProjectRpcMessage
	(*MyProjectResponse)(nil), // 5: project.service.v1.MyProjectResponse
}
var file_project_service_proto_depIdxs = []int32{
	1, // 0: project.service.v1.MenuMessage.children:type_name -> project.service.v1.MenuMessage
	1, // 1: project.service.v1.IndexResponse.menus:type_name -> project.service.v1.MenuMessage
	3, // 2: project.service.v1.MyProjectResponse.pm:type_name -> project.service.v1.ProjectMessage
	0, // 3: project.service.v1.ProjectService.Index:input_type -> project.service.v1.IndexMessage
	4, // 4: project.service.v1.ProjectService.FindProjectByMemId:input_type -> project.service.v1.ProjectRpcMessage
	2, // 5: project.service.v1.ProjectService.Index:output_type -> project.service.v1.IndexResponse
	5, // 6: project.service.v1.ProjectService.FindProjectByMemId:output_type -> project.service.v1.MyProjectResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_project_service_proto_init() }
func file_project_service_proto_init() {
	if File_project_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_service_proto_rawDesc), len(file_project_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_project_service_proto_goTypes,
		DependencyIndexes: file_project_service_proto_depIdxs,
		MessageInfos:      file_project_service_proto_msgTypes,
	}.Build()
	File_project_service_proto = out.File
	file_project_service_proto_goTypes = nil
	file_project_service_proto_depIdxs = nil
}
